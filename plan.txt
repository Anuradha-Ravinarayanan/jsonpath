* make jsonpath interface to obj centric, path centric approaches
* write expression parsing with truth testing

JsonPath.path({}).for(obj).to_a
JsonPath.path({}).for(obj).each {|o| o }
JsonPath.path({}).for(obj).map {|o| o }
JsonPath.path({}).for(obj).map! {|o| o }

@object = JsonPath.wrap({}) { |p| 
  p.path({}).to_a
  p.path({}).map {|a| ... }
}.object

//book[3]	
$..book[2]	the third book

//book[last()]
$..book[(@.length-1)]
$..book[-1:]	the last book in order.

//book[position()<3]
$..book[0,1]
$..book[:2]	the first two books

//book[isbn]
$..book[?(@.isbn)]
filter all books with isbn number

//book[price<10]
$..book[?(@.price<10)]
filter all books cheapier than 10

//*
$..*
all Elements in XML document. All members of JSON structure.

[?%-1]
[?(@)]

[?$]

.select{|n| }